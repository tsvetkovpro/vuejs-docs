// Каждый vm — это корневой инстанс Vue, создаваемый функцией-конструктором:
var vm = new Vue({
  // опции
})


// Конструктор Vue можно расширить, получив переиспользуемый компонент с предустановленными опциями:
var MyComponent = Vue.extend({
  // опции компонента
})
// все инстансы `MyComponent` создаются
// с предопределёнными опциями
var myComponentInstance = new MyComponent()

// Хотя можно создать инстанс компонента и императивно, как показано выше, чаще рекомендуется создавать их декларативно, как пользовательские элементы в шаблонах.


// Каждый инстанс Vue проксирует все свойства своего объекта data:
var data = { a: 1 }
var vm = new Vue({
  data: data
})
vm.a === data.a // -> true
// установка свойства также влияет на оригинальные данные
vm.a = 2
data.a // -> 2
// ... и наоборот
data.a = 3
vm.a // -> 3


// Помимо свойств объекта data, инстанс Vue предоставляет ряд собственных свойств и методов. Их имена начинаются с $, чтобы отличаться от свойств данных. Например:
var data = { a: 1 }
var vm = new Vue({
  el: '#example',
  data: data
})
vm.$data === data // -> true
vm.$el === document.getElementById('example') // -> true
// $watch — это метод инстанса
vm.$watch('a', function (newVal, oldVal) {
  // этот коллбэк будет вызван, когда изменится `vm.a`
})